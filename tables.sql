

CREATE TABLE REGISTEREDUSER (
USERID VARCHAR(10) NOT NULL,
EMAIL VARCHAR(50) NOT NULL,
PASSWORD VARCHAR(20) NOT NULL,
PHONE VARCHAR(15),
DOB VARCHAR(12),
PRIMARY KEY (USERID));

CREATE TABLE STAFF (
"ROLE" VARCHAR(20) NOT NULL,
STAFFFIRSTNAME VARCHAR(50) NOT NULL,
STAFFLASTNAME VARCHAR(50) NOT NULL,
COMPSHIPPINGADDRESS VARCHAR(250) NOT NULL,
COMPBILLINGADDRESS VARCHAR(250) NOT NULL,
PRIMARY KEY ("ROLE"));

CREATE TABLE CUSTOMER (
"ROLE" VARCHAR(20) NOT NULL,
CUSTFIRSTNAME VARCHAR(50) NOT NULL,
CUSTLASTNAME VARCHAR(50) NOT NULL,
CUSTSHIPPINGADDRESS VARCHAR(250) NOT NULL,
CUSTBILLINGADDRESS VARCHAR(250) NOT NULL,
PRIMARY KEY ("ROLE"));

CREATE TABLE GUEST (
"ROLE" VARCHAR(20) NOT NULL,
PRIMARY KEY ("ROLE"));

CREATE TABLE "ORDER" (
ORDERID VARCHAR(20) NOT NULL,
EMAIL VARCHAR(50),
ORDERDATE DATE NOT NULL,
ORDERSHIPPINGADDRESS VARCHAR(250) NOT NULL,
ORDERBILLINGADDRESS VARCHAR(250) NOT NULL,
ORDERSTATUS VARCHAR(100) NOT NULL,
PRIMARY KEY (ORDERID));

CREATE TABLE ORDERLINE (
ORDERLINEID VARCHAR(20) NOT NULL,
ORDERID VARCHAR(20) NOT NULL,
PRODUCTID VARCHAR(20) NOT NULL,
QUANTITY INTEGER NOT NULL,
PRICE FLOAT(10) NOT NULL,
PRIMARY KEY (ORDERLINEID),
FOREIGN KEY (ORDERID) REFERENCES "ORDER"(ORDERID));

CREATE TABLE PRODUCTCATEGORIES(
CATEGORY VARCHAR(50) NOT NULL,
ARCHIVED BOOLEAN,
PRIMARY KEY (CATEGORY));


CREATE TABLE PRODUCT (
ID INTEGER PRIMARY KEY GENERATED ALWAYS AS IDENTITY,
CATEGORY VARCHAR(50) REFERENCES PRODUCT_CATEGORIES (CATEGORY) ON DELETE CASCADE,
PRODUCT NAME VARCHAR(50),
DESCRIPTION LONG VARCHAR,
STOCK INTEGER,
PRICE DOUBLE,
ARCHIVED BOOLEAN );

CREATE TABLE PAYMENT (
PAYMENTID VARCHAR(20) NOT NULL,
CARDFULLNAME VARCHAR(100) NOT NULL,
CARDNUM VARCHAR(20) NOT NULL,
CVV VARCHAR(3) NOT NULL,
EXPIRYDATE DATE NOT NULL,
CARDTYPE VARCHAR(50) NOT NULL,
ISSUEDBANK VARCHAR(100) NOT NULL,
PAYMENTDATE DATE NOT NULL,
INVOICEID VARCHAR(20) NOT NULL,
PRIMARY KEY (PAYMENTID),
FOREIGN KEY (INVOICEID) REFERENCES INVOICE(INVOICEID));

CREATE TABLE INVOICE (
INVOICEID VARCHAR(20) NOT NULL,
ORDERID VARCHAR(20) NOT NULL,
INVOICEDATE DATE NOT NULL,
PRIMARY KEY (INVOICEID),
FOREIGN KEY (ORDERID) REFERENCES "ORDER"(ORDERID));

CREATE TABLE SHIPMENT (
SHIPMENTID VARCHAR(20) NOT NULL,
ORDERID VARCHAR(20) NOT NULL,
INVOICEID VARCHAR(20) NOT NULL,
SHIPMENTCOST DOUBLE NOT NULL,
SHIPMENTSTATUS VARCHAR(100) NOT NULL,
SHIPMENTTRACKINGNUM VARCHAR(20) NOT NULL,
PRIMARY KEY (SHIPMENTID),
FOREIGN KEY (ORDERID) REFERENCES "ORDER"(ORDERID),
FOREIGN KEY (INVOICEID) REFERENCES INVOICE(INVOICEID));

CREATE TABLE SHIPMENTITEM (
SHIPMENTITEMID VARCHAR(20) NOT NULL,
ORDERLINEID VARCHAR(20) NOT NULL,
SHIPMENTID VARCHAR(20) NOT NULL,
PRIMARY KEY (SHIPMENTITEMID),
FOREIGN KEY (ORDERLINEID) REFERENCES ORDERLINE(ORDERLINEID),
FOREIGN KEY (SHIPMENTID) REFERENCES SHIPMENT(SHIPMENTID));

CREATE TABLE SUPPLIER (
SUPPLIERID VARCHAR(20) NOT NULL,
SUPPLIERNAME VARCHAR(250) NOT NULL,
SUPPLIERADDRESS VARCHAR(250) NOT NULL,
SUPPLIEREMAIL VARCHAR(50) NOT NULL,
SUPPLIERCONTACTNUM VARCHAR(15) NOT NULL,
PRIMARY KEY (SUPPLIERID));

CREATE TABLE PRODUCTSUPPLYLINE (
PRODUCTSUPPLYLINEID VARCHAR(20) NOT NULL,
PRODUCTID VARCHAR(20) NOT NULL,
SUPPLIERID VARCHAR(20) NOT NULL,
PRIMARY KEY (PRODUCTSUPPLYLINEID),
FOREIGN KEY (PRODUCTID) REFERENCES PRODUCT(PRODUCTID),
FOREIGN KEY (SUPPLIERID) REFERENCES SUPPLIER(SUPPLIERID));


